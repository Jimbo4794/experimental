 # Copyright 2019 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: tekton-polling-controller
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tekton-polling-controller
      app.kubernetes.io/component: polling
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-polling
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tekton-polling-controller
        app.kubernetes.io/component: polling
        app.kubernetes.io/instance: default
        app.kubernetes.io/version: "devel"
        app.kubernetes.io/part-of: tekton-polling
        # tekton.dev/release value replaced with inputs.params.versionTag in pipeline/tekton/publish.yaml
        pipeline.tekton.dev/release: "devel"
        app: tekton-poll-controller
        version: "devel"
    spec:
    # TODO Create a tekton-polling-controller
      serviceAccountName: tekton-polling-controller
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: NotIn
                  values:
                  - windows
      containers:
      - name: tekton-polling-controller
        image: ko://github.com/tektoncd/experimental/polling/cmd/controller
        env:
        - name: METRICS_DOMAIN
          value: tekton.dev/polling
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          # User 65532 is the distroless nonroot user ID
          runAsUser: 65532
          runAsGroup: 65532