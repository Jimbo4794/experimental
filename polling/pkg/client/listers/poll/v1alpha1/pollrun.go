/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/tektoncd/experimental/polling/pkg/apis/poll/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PollRunLister helps list PollRuns.
// All objects returned here must be treated as read-only.
type PollRunLister interface {
	// List lists all PollRuns in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PollRun, err error)
	// PollRuns returns an object that can list and get PollRuns.
	PollRuns(namespace string) PollRunNamespaceLister
	PollRunListerExpansion
}

// pollRunLister implements the PollRunLister interface.
type pollRunLister struct {
	indexer cache.Indexer
}

// NewPollRunLister returns a new PollRunLister.
func NewPollRunLister(indexer cache.Indexer) PollRunLister {
	return &pollRunLister{indexer: indexer}
}

// List lists all PollRuns in the indexer.
func (s *pollRunLister) List(selector labels.Selector) (ret []*v1alpha1.PollRun, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PollRun))
	})
	return ret, err
}

// PollRuns returns an object that can list and get PollRuns.
func (s *pollRunLister) PollRuns(namespace string) PollRunNamespaceLister {
	return pollRunNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PollRunNamespaceLister helps list and get PollRuns.
// All objects returned here must be treated as read-only.
type PollRunNamespaceLister interface {
	// List lists all PollRuns in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PollRun, err error)
	// Get retrieves the PollRun from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.PollRun, error)
	PollRunNamespaceListerExpansion
}

// pollRunNamespaceLister implements the PollRunNamespaceLister
// interface.
type pollRunNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PollRuns in the indexer for a given namespace.
func (s pollRunNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PollRun, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PollRun))
	})
	return ret, err
}

// Get retrieves the PollRun from the indexer for a given namespace and name.
func (s pollRunNamespaceLister) Get(name string) (*v1alpha1.PollRun, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("pollrun"), name)
	}
	return obj.(*v1alpha1.PollRun), nil
}
